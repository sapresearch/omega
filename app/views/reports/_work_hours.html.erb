<script type="text/javascript">
  $(function() {
    $( "#tabs" ).tabs();
  });

</script>

<%#*<div id="tabs">%>
  <%#*<ul>%>
    <%#*<li><a href="#tabs-1">Work Hours Overview</a></li>%>
    <%#*<li><a href="#tabs-2">By User</a></li>%>
    <%#*<li><a href="#tabs-3">By Position</a></li>%>
  <%#*</ul>%>
  <%#*<div id="tabs-1">%>
    <%#*<p>%>
      <%#*<div id='table_div_1'></div>%>
    <%#*</p>%>
  <%#*</div>%>
  <%#*<div id="tabs-2">%>
    <%#*<p>%>
      <%# options = @employees.map{|e|[e.name, @employees.index(e)]} %>
      <%#= select_tag(:select_employees, options_for_select(options), :onchange => "drawPositionsTable()") %>
      <%#*<div id='table_div_2'></div>%>
    <%#*</p>%>
  <%#*</div>%>
  <%#*<div id="tabs-3">%>
    <%#*<p>%>
      <%# options = @positions.map{|p|[p.name, @positions.index(p)]} %>
      <%#= select_tag(:select_positions, options_for_select(options), :onchange => "drawEmployeesTable()") %>
      <%#*<div id='table_div_3'></div>%>
    <%#*</p>%>
  <%#*</div>%>
<%#*</div>%>

<%#*<script type="text/javascript">%>
  <%#*drawOverviewTable();%>
  <%#*drawPositionsTable();%>
  <%#*drawEmployeesTable();%>
<%#*</script>%>


  <div id="volunteer_report_dashboard">
    <div id="bar_chart_div" style="width: 45%; height: 100%;"></div>
    <div id="range_slider_div" style="position: absolute; top: 10px; right: 0px"></div>
    <div id="pie_chart_div" style="position: absolute; top: 40px; right: 0px"></div>
    <div id="table_chart_div" style="position: absolute; top: 240px; right: 0px"></div>
  </div>

<script type='text/javascript'>
  
  google.load("visualization", "1", {packages:["corechart"]});
  google.setOnLoadCallback(drawChart);
  function drawChart() {
    var data = google.visualization.arrayToDataTable(
      /*[['Volunteer', 'Hours'],
      ['Parvez Islam',  10],
      ['Kexia Tang',  11],
      ['Paul Miller',  6],
      ['Yuiting',  10],
      ['Parvez Islam',  10],
      ['Kexia Tang',  11],
      ['Paul Miller',  6],
      ['Yuiting',  10]]*/
      <%= raw  Contact.includes(:records=>:position).all.map{
        |c| [c.first_name, c.records.inject(0) {
            |result,record|
            result += (record.position.end - record.position.start).to_i / 3600
          }
        ]
      }.sort{ |a,b| b[1] <=> a[1] }.insert(0, ['Volunteer', 'Hours']) %>
    );
    var options = {
      title: 'Volunteer contributions'
      , vAxis: {title: 'Name',  titleTextStyle: {color: 'green'}}
      <%#*, hAxis: {gridlines: {color: '#333', count: 4}}%>
    };
    var chart = new google.visualization.BarChart(document.getElementById('bar_chart_div'));
    chart.draw(data, options);
  }
/*
  google.load("visualization", "1", {packages:["corechart"]});
  google.setOnLoadCallback(drawChart);
  function drawChart() {
    var data = google.visualization.arrayToDataTable([
      ['Volunteer', 'Hours per Week'],
      ['Parvez',     11],
      ['Paul',      9],
      ['Kexia',  9],
      ['Mike', 5],
      ['Asad',    3]
    ]);
    var options = {
      title: 'Volunteer Contributions (hours)'
      , chartArea:{left:5,top:40,width:"60%",height:"100%"}
      , pieSliceText: "value"
    };
    var chart = new google.visualization.PieChart(document.getElementById('pie_chart_div'));
    chart.draw(data, options);
  }

  google.load('visualization', '1', {packages:['table']});
  google.setOnLoadCallback(drawTable);
  function drawTable() {
    var data = new google.visualization.DataTable();
    data.addColumn('string', 'Volunteer');
    data.addColumn('number', 'Missed hours');
    data.addRows([
      ['Mike',  {v: 1, f: '1'}],
      ['Jim',   {v:8,   f: '8'}],
      ['Alice', {v: 1, f: '1'}],
      ['Bob',   {v: 7.5,  f: '7.5'}]
    ]);
    var options  = {
      showRowNumber: true
      , width: "600px"
    }
    var table = new google.visualization.Table(document.getElementById('table_chart_div'));
    table.draw(data, options);
  }
  */
  // Load the Visualization API and the controls package.
  google.load('visualization', '1.0', {'packages':['controls']});

  // Set a callback to run when the Google Visualization API is loaded.
  google.setOnLoadCallback(drawDashboard);

  // Callback that creates and populates a data table,
  // instantiates a dashboard, a range slider and a pie chart,
  // passes in the data and draws it.
  function drawDashboard() {

    // Create our data table.
    var data = google.visualization.arrayToDataTable(
    /*[['Volunteer', 'Hours per Week'],
      ['Parvez',     11],
      ['Paul',      9],
      ['Kexia',  9],
      ['Mike', 5],
      ['Asad',    3]]*/
    <%= raw  Contact.includes(:records=>:position).all.map{
        |c| [c.first_name.to_s, c.records.inject(0) {
            |result,record|
            result += (record.position.end - record.position.start).to_i / 3600
          }]
      }.sort{ |a,b| b[1] <=> a[1]}.insert(0, ['Volunteer', 'Hours per Week']) %>
  );

    // Create a dashboard.
    var dashboard = new google.visualization.Dashboard(
        document.getElementById('volunteer_report_dashboard'));

    // Create a range slider, passing some options
    var donutRangeSlider = new google.visualization.ControlWrapper({
      'controlType': 'NumberRangeFilter',
      'containerId': 'range_slider_div',
      'options': {
        'filterColumnLabel': 'Hours per Week'
      }
    });

    // Create a pie chart, passing some options
    var pieChart = new google.visualization.ChartWrapper({
      'chartType': 'PieChart',
      'containerId': 'pie_chart_div',
      'options': {
        title: 'Volunteer Contributions (hours)'
        , chartArea: { left: 5, top: 40 }
        , pieSliceText: 'value'
        , is3D: true
      }
    });

    //
    var tableChart = new google.visualization.ChartWrapper( {
      'chartType': 'Table',
      'containerId': 'table_chart_div',
      'options': {
        showRowNumber: true
      }
    });

    //
    /*var barChart = new google.visualization.chartWrapper( {
      'chartType': 'Table',
      'containerId': 'table_chart_div',
      'options': {
        title: 'Volunteer contributions'
        , vAxis: { title: 'Name',  titleTextStyle: { color: 'green' } }
      }
    });*/

    // Establish dependencies, declaring that 'filter' drives 'pieChart',
    // so that the pie chart will only display entries that are let through
    // given the chosen slider range.
    dashboard.bind(donutRangeSlider, pieChart);
    dashboard.bind(donutRangeSlider, tableChart);

    // Draw the dashboard.
    dashboard.draw(data);
  }
</script>
